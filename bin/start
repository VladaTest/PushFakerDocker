#!/bin/bash
#tputcolors

# Default ENV
_ENV="--env DBS_IP=168.62.8.64 --env DBS_U=zep1 --env DBS_P=zepppelin"

while [[ $# > 1 ]]
do
    key="$1"
    echo $key
    shift
    case $key in
        --name)
        _CONTAINER_NAME="$1"
        shift
        ;;

        --db)
        _DB_SERVER_IP="$1"
        _ENV="$_ENV --env DB_SERVER_IP=$1"
        shift
        ;;

        --provider)
        _PROVIDER="$1"
        _ENV="$_ENV --env PROVIDER=$1"
        shift
        ;;

        --image)
        _IMAGE="$1"
        shift
        ;;

        --host)
        _HOST="$1"
        shift
        ;;

        --client_count)
        _ENV="$_ENV --env CLIENT_COUNT=$1"
        shift
        ;;

        --client_key_count)
        _ENV="$_ENV --env CLIENT_KEY_COUNT=$1"
        shift
        ;;

        --client_attr_count)
        _ENV="$_ENV --env CLIENT_ATTR_COUNT=$1"
        shift
        ;;

        --history_x_days)
        _ENV="$_ENV --env HISTORY_X_DAYS=$1"
        shift
        ;;

        --history_granularity)
        _ENV="$_ENV --env HISTORY_GRANULARITY=$1"
        shift
        ;;

        --workers)
        _ENV="$_ENV --env WORKERS=$1"
        shift
        ;;

        *)
                # unknown option
        ;;
    esac
done

if [ "$_HOST" ]
then
    _HOST=" --tls -H tcp://$_HOST.cloudapp.net:4243"
fi

if [ -z "$_CONTAINER_NAME" ] ||
   [ -z "$_DB_SERVER_IP" ] ||
   [ -z "$_PROVIDER" ]
then
    echo -e "\e[31mInvalid argument provided.\e[0m\n" >&2
    echo -e "\e[97musage:\e[0m bin/start \e[31m--name\e[0m container_name \e[31m--db\e[0m database_ip \e[31m--provider\e[0m provider_name\n" >&2
    echo -e "\e[97moptional parameters:\e[0m" >&2
    echo -e "   \e[97m--workers\e[0m             Number of Faker workers.                            (Default 20)" >&2
    echo -e "   \e[97m--client_count\e[0m        Number of clients Faker should create.              (Default 1)" >&2
    echo -e "   \e[97m--client_key_count\e[0m    Maxinmum number of keys generated per client.       (Default 100)" >&2
    echo -e "   \e[97m--client_attr_count\e[0m   Maxinmum number of attributes generated per client. (Default 10)" >&2
    echo -e "   \e[97m--history_x_days\e[0m      Generate history for last X days.                   (Default 7)" >&2
    echo -e "   \e[97m--history_granularity\e[0m How often data should be pushed. In seconds.        (Default 43200)" >&2
    echo -e "   \e[97m--host\e[0m                Docker host name on Databox azure." >&2
    echo -e "   \e[97m--image\e[0m               Docker image name." >&2
    exit 1
fi

if [ -z "$_IMAGE" ]
then
    _IMAGE="push-faker"
fi

# Reset docker container
docker $_HOST stop $_CONTAINER_NAME &>/dev/null
docker $_HOST rm $_CONTAINER_NAME &>/dev/null

# Start instance
CID=$(docker $_HOST run --name $_CONTAINER_NAME $_ENV -i -t -d $_IMAGE /faker-start)
docker $_HOST inspect --format='{{.NetworkSettings.IPAddress}}' $CID
docker $_HOST attach $_CONTAINER_NAME
